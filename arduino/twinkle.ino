#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128  // Lebar OLED
#define SCREEN_HEIGHT 64  // Tinggi OLED
#define OLED_RESET    -1  // Tidak menggunakan pin reset

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const int buzzerPin = A0;  // pin buzzer

// Nada frekuensi (Hz)
#define NOTE_C4  262
#define NOTE_D4  294
#define NOTE_E4  330
#define NOTE_F4  349
#define NOTE_G4  392
#define NOTE_A4  440
#define NOTE_B4  494
#define NOTE_C5  523
#define NOTE_D5  587
#define NOTE_E5  659
#define NOTE_F5  698
#define NOTE_G5  784
#define NOTE_C4  261
#define NOTE_D4  294
#define NOTE_E4  329
#define NOTE_F4  349
#define NOTE_G4  392
#define NOTE_A4  440

int melody[] = {
  NOTE_C4, NOTE_C4, NOTE_G4, NOTE_G4, NOTE_A4, NOTE_A4, NOTE_G4,
  NOTE_F4, NOTE_F4, NOTE_E4, NOTE_E4, NOTE_D4, NOTE_D4, NOTE_C4,
  
  NOTE_G4, NOTE_G4, NOTE_F4, NOTE_F4, NOTE_E4, NOTE_E4, NOTE_D4,
  NOTE_G4, NOTE_G4, NOTE_F4, NOTE_F4, NOTE_E4, NOTE_E4, NOTE_D4,
  
  NOTE_C4, NOTE_C4, NOTE_G4, NOTE_G4, NOTE_A4, NOTE_A4, NOTE_G4,
  NOTE_F4, NOTE_F4, NOTE_E4, NOTE_E4, NOTE_D4, NOTE_D4, NOTE_C4
};

// Durasi nada (4 artinya 1/4 beat; lebih kecil = lebih cepat)
int noteDurations[] = {
  4, 4, 4, 4, 4, 4, 2,
  4, 4, 4, 4, 4, 4, 2,
  
  4, 4, 4, 4, 4, 4, 2,
  4, 4, 4, 4, 4, 4, 2,
  
  4, 4, 4, 4, 4, 4, 2,
  4, 4, 4, 4, 4, 4, 2
};

const int melodyLength = sizeof(melody) / sizeof(melody[0]);
int noteIndex = 0;
unsigned long noteStartTime = 0;

// Bitmap asli (data lengkap harus sesuai hasil konversi 128x64)
const unsigned char epd_bitmap_11zon_resized [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3c, 0xe6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x18, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 
	0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x18, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x7f, 0xf8, 0x04, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x7f, 0xfe, 0x04, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x8f, 0x9f, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
	0x1f, 0xff, 0xff, 0xff, 0xdf, 0x81, 0xff, 0x83, 0xf0, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 
	0x00, 0x7f, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xc0, 0x7c, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xe1, 
	0x00, 0x3f, 0xff, 0xfe, 0x00, 0x00, 0x07, 0xfe, 0x10, 0x00, 0x00, 0x00, 0x03, 0xff, 0x1e, 0x01, 
	0x00, 0x1f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0x87, 0x8c, 0x01, 
	0xf0, 0x3f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x88, 0x01, 
	0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x01, 
	0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x39, 
	0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x1f, 0xe7, 0x79, 
	0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x0e, 0x0f, 0xfd, 
	0xff, 0xff, 0xff, 0x00, 0xcf, 0x80, 0xc1, 0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x0e, 0x07, 0xf9, 
	0xff, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xe0, 0x00, 0x0f, 0xff, 0xe0, 0x00, 0x00, 0x02, 0x1f, 0xf1, 
	0x8e, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xf0, 0x00, 0x00, 0x1f, 0xf8, 0xff, 
	0x3c, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0xff, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x1f, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xef, 0xff, 
	0x00, 0x03, 0xff, 0x80, 0x30, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xdf, 
	0x00, 0x03, 0xff, 0xcb, 0xf0, 0x00, 0x00, 0x00, 0xbf, 0x84, 0x00, 0xfc, 0x00, 0x0f, 0xff, 0xff, 
	0x00, 0x03, 0xff, 0xff, 0xf0, 0x06, 0x00, 0x01, 0xff, 0xe4, 0x1f, 0xff, 0x00, 0x0f, 0xff, 0xff, 
	0x00, 0x03, 0xff, 0x0f, 0xf0, 0x07, 0x00, 0x1f, 0xff, 0xfe, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 
	0x00, 0x01, 0xff, 0x9f, 0xf0, 0x1f, 0x90, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xdd, 0x49, 
	0x00, 0x00, 0x07, 0xdf, 0xf0, 0x1f, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x2e, 
	0x00, 0x60, 0x03, 0xdf, 0xf8, 0x03, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xff, 
	0x00, 0x40, 0x00, 0x1f, 0xf8, 0x0e, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0x40, 0x00, 0x25, 0xff, 
	0x00, 0x1e, 0x00, 0x1f, 0xf8, 0x05, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x20, 0x7f, 
	0x7d, 0xbf, 0x00, 0x1f, 0xfc, 0x03, 0xff, 0xf8, 0x1e, 0x3f, 0xff, 0xfc, 0x80, 0x00, 0x60, 0x3f, 
	0xfd, 0xff, 0xd8, 0x1f, 0xff, 0x80, 0xff, 0xf0, 0x00, 0x3f, 0xff, 0xfe, 0x00, 0x2f, 0xe0, 0x0f, 
	0x1c, 0xef, 0x00, 0x1f, 0xcf, 0x80, 0x0e, 0xff, 0x87, 0xff, 0xff, 0xec, 0x00, 0x3b, 0x3c, 0x0f, 
	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0x3f, 0xec, 0x00, 0x00, 0x00, 0x0d, 
	0x39, 0x72, 0x11, 0x00, 0x08, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xff, 0xff, 0x9f, 0x38, 0x0f, 0x80, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xe7, 0xff, 0x9f, 0xf8, 0x0b, 0x80, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xe7, 0xf7, 0x1f, 0xc8, 0x00, 0x00, 0x0c, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xef, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x3f, 0xaf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x20, 
	0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0x00
};

// Data dummy untuk bitmap kedua (epd_bitmap_fotbar1_11zon)
// Gantilah data ini dengan data hasil konversi gambar Anda!
const unsigned char epd_bitmap_fotbar1_11zon__1_ [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x07, 0xe1, 0xff, 0xc1, 0xf8, 0x00, 0x04, 0x0f, 0xff, 0xe0, 
	0x10, 0x00, 0x08, 0x00, 0x3f, 0xe3, 0xc7, 0xe1, 0xff, 0xc1, 0xf9, 0x00, 0x04, 0x07, 0xff, 0x80, 
	0x38, 0x00, 0xe8, 0x00, 0x00, 0x78, 0x77, 0xfc, 0x7f, 0xe0, 0xf9, 0xfd, 0x84, 0x03, 0xfe, 0x00, 
	0x38, 0x39, 0xf8, 0x00, 0x60, 0x3f, 0xfb, 0xfc, 0x1f, 0xe0, 0xf8, 0xff, 0xe4, 0x01, 0xf0, 0x00, 
	0x1c, 0x7b, 0xfc, 0x00, 0x00, 0x07, 0xfb, 0x80, 0x1f, 0xf1, 0xf9, 0xef, 0xec, 0x01, 0x00, 0x2f, 
	0x3c, 0xf3, 0xfe, 0x00, 0x00, 0x0f, 0xfb, 0x87, 0xff, 0xff, 0xf3, 0x87, 0xec, 0x40, 0x7f, 0xff, 
	0x29, 0xe3, 0xff, 0x00, 0x02, 0xcf, 0x3b, 0xdf, 0xff, 0xfe, 0x25, 0x0f, 0xfe, 0x4f, 0xff, 0xff, 
	0x1b, 0xe0, 0x00, 0x03, 0xff, 0xcf, 0x73, 0xff, 0xff, 0xff, 0xa1, 0x7f, 0xf6, 0x5f, 0xff, 0xff, 
	0x02, 0x00, 0x00, 0x07, 0xfd, 0xc5, 0xe3, 0xbf, 0xff, 0xff, 0xe1, 0xff, 0xe6, 0x81, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x03, 0xff, 0xe3, 0xe3, 0x9f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 
	0x00, 0x00, 0x00, 0x01, 0x5f, 0xe0, 0x03, 0xff, 0xe0, 0xfb, 0x9f, 0xc0, 0x00, 0x00, 0x00, 0x04, 
	0x00, 0x00, 0x03, 0x80, 0x7f, 0xef, 0xff, 0xff, 0x00, 0x78, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0xe0, 0x00, 0x07, 0xf9, 0xfe, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x03, 0xfc, 0x0c, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x07, 0xf8, 0xff, 0x83, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xf0, 0x00, 0x01, 0x98, 0x00, 0x0c, 0x0f, 0xf3, 0xff, 0xf3, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x10, 0x01, 0x81, 0xc4, 0x00, 0x00, 0x1f, 0xe7, 0xff, 0xf9, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0x03, 0xcc, 0x00, 0x00, 0x1f, 0xef, 0xff, 0xf9, 0xfc, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xfe, 0xfe, 0x00, 0x00, 0x1f, 0xdf, 0xff, 0xfc, 0xfd, 0xfe, 0x00, 0x01, 0xf0, 0x00, 
	0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0x9f, 0xff, 0xfe, 0xfd, 0xff, 0xe0, 0x01, 0xf3, 0x00, 
	0x00, 0x00, 0xf0, 0x6e, 0x00, 0x00, 0x3f, 0x83, 0xff, 0xf8, 0x7c, 0x7f, 0xfc, 0x00, 0xe0, 0x38, 
	0x00, 0x01, 0x04, 0x7e, 0x00, 0x00, 0x3f, 0x08, 0xff, 0xce, 0x70, 0x0f, 0xfc, 0x00, 0xc0, 0x3e, 
	0x00, 0x00, 0x40, 0x4c, 0x00, 0x00, 0x7f, 0x7f, 0xff, 0xff, 0x38, 0x00, 0xfc, 0x00, 0x30, 0x7f, 
	0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x7f, 0x7f, 0xff, 0xff, 0xb9, 0xc0, 0x1c, 0x00, 0x1c, 0x7f, 
	0x00, 0x00, 0x1c, 0x70, 0x00, 0x00, 0x7e, 0xe1, 0xff, 0xc0, 0x98, 0xf0, 0x08, 0x20, 0x0f, 0x1f, 
	0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x7e, 0x81, 0x7f, 0xc2, 0x99, 0x90, 0x00, 0x70, 0x07, 0x83, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x81, 0xff, 0xe7, 0xdc, 0x00, 0x10, 0x78, 0x07, 0xf8, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xfc, 0x7c, 0x00, 0x71, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xef, 0x7f, 0xfc, 0x7e, 0x00, 0x0f, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xfc, 0x7f, 0x10, 0x1f, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0x88, 0x03, 
	0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xc0, 0x03, 
	0x00, 0x02, 0x00, 0xc0, 0x00, 0x00, 0xfb, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xf9, 0x00, 0x01, 
	0x00, 0x02, 0x0c, 0x00, 0x07, 0x00, 0xfb, 0xff, 0xf7, 0x7f, 0xff, 0xff, 0xff, 0xae, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x42, 0x1f, 0xe1, 0xfb, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0x3e, 0x20, 0x00, 
	0x00, 0x00, 0x00, 0x46, 0x3f, 0xf1, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x60, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x18, 0x00, 
	0x00, 0x01, 0x00, 0x0f, 0xff, 0xfd, 0xff, 0xfe, 0x81, 0x27, 0xff, 0xff, 0xff, 0xf0, 0xf8, 0x00, 
	0x00, 0x01, 0x00, 0x0f, 0xff, 0xff, 0xb7, 0xfc, 0x01, 0xcf, 0xff, 0xff, 0xff, 0xf0, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xb7, 0xff, 0x8f, 0xff, 0xff, 0x7d, 0xff, 0xf9, 0xfc, 0x00, 
	0x00, 0x01, 0x00, 0x63, 0xff, 0xff, 0x93, 0xff, 0xff, 0xff, 0xff, 0x7c, 0xfb, 0xf9, 0xfc, 0x01, 
	0x00, 0x01, 0x80, 0x6f, 0xff, 0xff, 0x98, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf7, 0xff, 0xff, 0x0f, 
	0x00, 0x00, 0x80, 0x7f, 0xff, 0xff, 0x88, 0x7f, 0xff, 0xff, 0x3f, 0xbb, 0x45, 0xfb, 0xff, 0xff, 
	0x00, 0x00, 0x80, 0x33, 0xff, 0xff, 0x4c, 0x1f, 0xff, 0xfe, 0x3f, 0xf2, 0x0b, 0xfb, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x06, 0x0f, 0xff, 0xfc, 0x7f, 0x7d, 0x00, 0x37, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xa6, 0x01, 0xff, 0xf8, 0x7f, 0xff, 0xb0, 0x07, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe3, 0x80, 0x7f, 0x00, 0xff, 0xff, 0x7f, 0xcf, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xe1, 0xf0, 0x00, 0x06, 0xff, 0xff, 0xc3, 0xe7, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf1, 0xfe, 0x00, 0x0c, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x02, 0x00, 0x1f, 0xf8, 0xf1, 0x00, 0x0c, 0xff, 0xf0, 0x1c, 0x3f, 0xff, 0xff, 
	0x00, 0x00, 0x40, 0x00, 0x00, 0x03, 0xf8, 0x60, 0x01, 0xfc, 0xff, 0xc0, 0x60, 0x1f, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x3e, 0x01, 0xef, 0xfc, 0x2c, 0x01, 0xf9, 0xff, 0x86, 0xc3, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x37, 0x8f, 0x7f, 0xfc, 0x3f, 0xab, 0xf9, 0xff, 0x88, 0x99, 0xff, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0xcf, 0xef, 0x7f, 0xfc, 0x1b, 0xfb, 0xf1, 0xff, 0x81, 0x60, 0x7f, 0xff, 0xff, 
	0x00, 0x00, 0x01, 0x3e, 0xe0, 0x3f, 0xfc, 0x03, 0xfb, 0xe1, 0xff, 0x21, 0x04, 0x7f, 0xff, 0xff, 
	0x00, 0x00, 0x03, 0xfc, 0x80, 0x1b, 0xfe, 0x03, 0xfb, 0xe1, 0xff, 0x02, 0x08, 0x7d, 0xff, 0xff, 
	0x00, 0x00, 0x03, 0xc9, 0x00, 0x23, 0xff, 0x27, 0xfb, 0xd3, 0xef, 0x01, 0x02, 0x8c, 0x7f, 0xff, 
	0x00, 0x00, 0x03, 0x04, 0x03, 0x21, 0xff, 0x37, 0xf3, 0xd3, 0xee, 0x00, 0x00, 0x97, 0xff, 0xff, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0x01, 0xff, 0x37, 0xf3, 0xf3, 0xde, 0x00, 0x01, 0x1f, 0xff, 0xfe, 
	0x00, 0x00, 0x02, 0x06, 0xff, 0x01, 0xff, 0x17, 0xf7, 0xf7, 0xde, 0x00, 0x01, 0x6e, 0xff, 0xe0, 
	0x00, 0x00, 0x04, 0x1b, 0xff, 0x01, 0xff, 0x1f, 0xf7, 0xe7, 0xfc, 0x00, 0x00, 0x68, 0x80, 0x01, 
	0x00, 0x00, 0x42, 0xe7, 0xff, 0x01, 0xff, 0x1f, 0xf7, 0xe7, 0xfc, 0x00, 0x00, 0x11, 0x00, 0x01, 
	0x00, 0x00, 0x05, 0x8f, 0xfe, 0x01, 0xff, 0x0f, 0xe7, 0xe7, 0xfc, 0x00, 0x00, 0x17, 0x00, 0x00, 
	0x00, 0x00, 0x79, 0x9f, 0xe6, 0x00, 0xff, 0x0f, 0xe7, 0xe7, 0xf8, 0x00, 0x00, 0x2b, 0x80, 0x00
};


// Data dummy untuk bitmap ketiga (epd_bitmap_fotbar2_11zon)
// Gantilah data ini dengan data hasil konversi gambar Anda!
const unsigned char epd_bitmap_fotbar_11zon__1_ [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xf0, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0x80, 0x00, 0x00, 0x1c, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xfb, 0xfe, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0xf8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x0f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x3f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x7f, 0xf0, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0xe0, 0x0f, 0xe3, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x80, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x3f, 0xf8, 0x09, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x01, 0x3f, 0xff, 0xef, 0xf0, 0x20, 0x00, 0x00, 0x00, 0x20, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x0d, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x3c, 0x00, 0x00, 0x01, 0x81, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0x80, 0x07, 0x3f, 0xc1, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xe0, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xe3, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xf3, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xf9, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xfb, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xdc, 0xe3, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xfb, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xf0, 0x83, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xff, 0xfc, 0x83, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xf8, 0x00, 0x3f, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xc0, 0x00, 0x3f, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xff, 0x80, 0x80, 0xff, 0x80, 0xbf, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x7f, 0xf8, 0x03, 0xff, 0x00, 0xb5, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xfe, 0xff, 0xfe, 0x01, 0xfe, 0x1f, 0xf9, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xfc, 0x01, 0xe3, 0xf7, 0xf9, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x05, 0x7f, 0xff, 0xf0, 0x02, 0x7e, 0x07, 0xf9, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x01, 0xe0, 0xfc, 0xf9, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x1f, 0x80, 0x00, 0x00, 0x3b, 0x00, 0xf1, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0xe1, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x60, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x60, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xc0, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x1c, 0xfb, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x1f, 0xce, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xdb, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xe7, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x07, 0xef, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa6, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0x03, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff
};

const unsigned char epd_bitmap_fotbar_11zon__2_ [] PROGMEM = {
	0xff, 0xc3, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0x87, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0x87, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0x02, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 
	0xfe, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xbf, 0xff, 0xff, 
	0xff, 0x80, 0x78, 0x00, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x34, 0x07, 0x2f, 0xff, 
	0xff, 0xf0, 0x38, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x31, 0x06, 0x01, 0xff, 
	0xff, 0xc0, 0x38, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x39, 0x04, 0xcd, 0xff, 
	0xff, 0x80, 0x3c, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x36, 0xdf, 0xfd, 0xff, 
	0xff, 0x80, 0x3c, 0x00, 0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x27, 0xc0, 0x03, 0xff, 
	0xff, 0xe0, 0x18, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x24, 0x00, 0x01, 0xff, 
	0xff, 0xf8, 0x18, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x0f, 
	0x3f, 0xe0, 0x10, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x6e, 0xc0, 0x00, 0x0f, 
	0x2f, 0x81, 0x30, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x6e, 0xe0, 0x00, 0x0f, 
	0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x6b, 0x67, 0xf0, 0x0f, 
	0xff, 0xfe, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x40, 0x00, 0x00, 0x0f, 
	0xff, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0xfd, 0x80, 0x00, 0x1f, 
	0xff, 0xff, 0xf0, 0x03, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xfd, 0x87, 0xf0, 0x1f, 
	0xff, 0xff, 0xf8, 0x07, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0xff, 0x83, 0xf0, 0x3f, 
	0xff, 0xff, 0xf8, 0x03, 0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x01, 0xff, 0x83, 0xe0, 0x3f, 
	0xff, 0xff, 0xf8, 0x03, 0xf1, 0x00, 0x7f, 0xff, 0xff, 0xfc, 0x00, 0x01, 0xec, 0xe0, 0x00, 0x77, 
	0xff, 0xff, 0xf8, 0x07, 0xf3, 0x00, 0x3f, 0xff, 0xff, 0x00, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x77, 
	0xff, 0xff, 0xfc, 0x07, 0xff, 0xf0, 0x0f, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x0e, 0x00, 0x01, 0xef, 0xff, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x0f, 0x8e, 0x42, 0xff, 0xfc, 0x00, 0x02, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x0f, 0x9e, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x0f, 0xfe, 0x04, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x1f, 0xff, 0x0f, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xfc, 0x04, 0x04, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xfc, 0x8e, 0x0c, 0x3c, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xee, 0x18, 0x7e, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xec, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x40, 0x1f, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xfe, 0x01, 0xff, 0x80, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x40, 0x07, 0xff, 0xff, 0x8f, 0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe4, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x00, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xef, 0xe8, 0x00, 0x00, 0x7f, 0xff, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0xe0, 0x01, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0x80, 0x01, 0x80, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 
	0xff, 0x3e, 0x00, 0x80, 0x80, 0x0f, 0xf8, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 
	0xfe, 0x1e, 0x60, 0x84, 0x80, 0x07, 0xff, 0x3b, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 
	0xfe, 0x04, 0x60, 0x06, 0x00, 0x03, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 
	0xf8, 0x00, 0x23, 0x06, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 
	0xf8, 0x90, 0x02, 0x0f, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 
	0xf0, 0x90, 0x00, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 
	0xf1, 0x00, 0x04, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
	0xf1, 0x00, 0x04, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff
};


// Deklarasi array pointer untuk bitmap yang akan ditampilkan
const unsigned char* bitmaps[] = {
  epd_bitmap_11zon_resized,
  epd_bitmap_fotbar1_11zon__1_,
  epd_bitmap_fotbar_11zon__1_,
	epd_bitmap_fotbar_11zon__2_
};

const int totalBitmaps = sizeof(bitmaps) / sizeof(bitmaps[0]);

// --- State Machine ---
// Tiga state: countdown, tampilkan bitmap, tampilkan pesan final
enum State {
  STATE_SHOW_MESSAGES,  // Tambahkan state baru
  STATE_COUNTDOWN,
  STATE_BITMAP,
  STATE_FINAL
};
State currentState = STATE_SHOW_MESSAGES;
unsigned long stateStartTime = 0;  // Untuk timing tiap state
int countdownNumber = 6;           // Mulai dari 3
int currentBitmapIndex = 0;        // Untuk iterasi bitmap

void drawHeart(int x, int y, int size) {
  int r = size / 4; // radius lingkaran
  // Tentukan pusat lingkaran kiri dan kanan
  int cx1 = x + r;
  int cy = y + r;
  int cx2 = x + size - r;
  
  // Gambar dua lingkaran
  display.fillCircle(cx1, cy, r, SSD1306_WHITE);
  display.fillCircle(cx2, cy, r, SSD1306_WHITE);
  
  // Gambar segitiga yang menyambung kedua lingkaran ke titik bawah hati
  display.fillTriangle(x, y + r, x + size, y + r, x + size/2, y + size, SSD1306_WHITE);
}


void playMelodyNonBlocking() {
  if (noteIndex < melodyLength) {
    int noteDuration = 1000 / noteDurations[noteIndex];
    // Mulai nada jika belum dimulai
    if (noteStartTime == 0) {
      noteStartTime = millis();
      tone(buzzerPin, melody[noteIndex], noteDuration);
    }
    // Ganti nada jika sudah waktunya
    if (millis() - noteStartTime >= noteDuration * 1.3) {
      noTone(buzzerPin);
      noteIndex++;
      noteStartTime = millis();
      if (noteIndex < melodyLength) {
        noteDuration = 1000 / noteDurations[noteIndex];
        tone(buzzerPin, melody[noteIndex], noteDuration);
      }
    }
  } else {
    noTone(buzzerPin);
  }
}

void showMessages() {
  int16_t x1, y1;
  uint16_t w1, h1;

  // 1. Tampilkan "Hi, Intan!"
  display.clearDisplay();
  display.setTextSize(1.7);
  display.setTextColor(WHITE);
  String text1 = "Hi, Intan!";
  display.getTextBounds(text1, 0, 0, &x1, &y1, &w1, &h1);
  int x1Pos = (SCREEN_WIDTH - w1) / 2;
  int y1Pos = (SCREEN_HEIGHT - h1) / 2;
  display.setCursor(x1Pos, y1Pos);
  display.println(text1);
  display.display();
  delay(3000);

  // 2. Tampilkan "i've"
  display.clearDisplay();
  display.setTextSize(1);
  String text2 = "i've";
  display.getTextBounds(text2, 0, 0, &x1, &y1, &w1, &h1);
  int x2Pos = (SCREEN_WIDTH - w1) / 2;
  int y2Pos = (SCREEN_HEIGHT - h1) / 2;
  display.setCursor(x2Pos, y2Pos);
  display.println(text2);
  display.display();
  delay(1000);

  // 3. Tampilkan "something"
  display.clearDisplay();
  String text3 = "something";
  display.getTextBounds(text3, 0, 0, &x1, &y1, &w1, &h1);
  int x3Pos = (SCREEN_WIDTH - w1) / 2;
  int y3Pos = (SCREEN_HEIGHT - h1) / 2;
  display.setCursor(x3Pos, y3Pos);
  display.println(text3);
  display.display();
  delay(1000);

  // 4. Tampilkan "for u....!"
  display.clearDisplay();
  String text4 = "for u....!";
  display.getTextBounds(text4, 0, 0, &x1, &y1, &w1, &h1);
  int x4Pos = (SCREEN_WIDTH - w1) / 2;
  int y4Pos = (SCREEN_HEIGHT - h1) / 2;
  display.setCursor(x4Pos, y4Pos);
  display.println(text4);
  display.display();
  delay(1000);

  // 5. Tampilkan "Siappp ?"
  display.clearDisplay();
  display.setTextSize(2);
  String text5 = "Siappp ?";
  display.getTextBounds(text5, 0, 0, &x1, &y1, &w1, &h1);
  int x5Pos = (SCREEN_WIDTH - w1) / 2;
  int y5Pos = (SCREEN_HEIGHT - h1) / 2;
  display.setCursor(x5Pos, y5Pos);
  display.println(text5);
  display.display();
  delay(1500);
}


void setup() {
  pinMode(buzzerPin, OUTPUT);
  Wire.begin();
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    while (1);
  }
  display.clearDisplay();
  stateStartTime = millis();
}

void loop() {
  unsigned long currentMillis = millis();
  
  if (currentState == STATE_SHOW_MESSAGES) {
    showMessages();
    currentState = STATE_COUNTDOWN;
    countdownNumber = 6;
    stateStartTime = millis();  // Reset waktu setelah showMessages
  }

  else if (currentState == STATE_COUNTDOWN) {
    if (currentMillis - stateStartTime >= 1000) {
      stateStartTime = currentMillis;
      countdownNumber--;
      display.clearDisplay();
      display.setTextSize(3);
      display.setTextColor(WHITE);
      
      int16_t x1, y1;
      uint16_t w, h;
      String countStr = String((countdownNumber > 0) ? countdownNumber : 0);
      display.getTextBounds(countStr, 0, 0, &x1, &y1, &w, &h);
      int x = (SCREEN_WIDTH - w) / 2;
      int y = (SCREEN_HEIGHT - h) / 2;
      display.setCursor(x, y);
      display.print(countStr);
      display.display();
      
      if (countdownNumber <= 0) {
        currentBitmapIndex = 0;
        currentState = STATE_BITMAP;
        stateStartTime = currentMillis;
      }
    }
  }

  else if (currentState == STATE_BITMAP) {
    display.clearDisplay();
    display.drawBitmap(0, 0, bitmaps[currentBitmapIndex], SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
    display.display();
    
    if (currentMillis - stateStartTime >= 3000) {
      stateStartTime = currentMillis;
      currentBitmapIndex++;
      if (currentBitmapIndex >= totalBitmaps) {
        currentState = STATE_FINAL;
        noteIndex = 0;
        noteStartTime = 0;
      }
    }
  }

  else if (currentState == STATE_FINAL) {
    display.clearDisplay();
    display.setTextSize(1.5);
    display.setTextColor(WHITE);
    display.setCursor(0, 0);
    display.println("Hey Intan,");
    display.println("Aku mungkin ga");
    display.println("suka matematika,");
    display.println("tapi aku");
    display.println("pasti suka kamu!");
    display.println();
    display.println();
    display.println("#selamat_wisuda");

    drawHeart(90, 40, 20);
    display.display();
    
    playMelodyNonBlocking();
    
    if (noteIndex >= melodyLength) {
      noTone(buzzerPin);
      delay(5000);
      // Reset ke awal
      currentState = STATE_SHOW_MESSAGES;
      stateStartTime = millis();
    }
  }
}